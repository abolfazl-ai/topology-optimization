{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "initial_id",
   "metadata": {
    "collapsed": true,
    "ExecuteTime": {
     "end_time": "2024-01-31T20:08:25.864696200Z",
     "start_time": "2024-01-31T20:08:15.480806400Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Input, concatenate"
   ]
  },
  {
   "cell_type": "code",
   "outputs": [],
   "source": [
    "input_2d = Input(shape=(301, 301, 4), name=\"Input2D\")\n",
    "input_1d = Input(shape=(3,), name=\"Input1D\")\n",
    "\n",
    "# CNN model\n",
    "conv1 = Conv2D(32, (3, 3), activation='relu')(input_2d)\n",
    "pool1 = MaxPooling2D(pool_size=(2, 2))(conv1)\n",
    "conv2 = Conv2D(64, (3, 3), activation='relu')(pool1)\n",
    "pool2 = MaxPooling2D(pool_size=(2, 2))(conv2)\n",
    "flatten = Flatten()(pool2)\n",
    "\n",
    "# Concatenate CNN output with Input1D\n",
    "concatenated = concatenate([flatten, input_1d])\n",
    "\n",
    "# Dense model\n",
    "dense1 = Dense(10000, activation='relu')(concatenated)\n",
    "dense2 = Dense(90000, activation='softmax')(dense1)\n",
    "\n",
    "# Final model\n",
    "model = tf.keras.Model(inputs=[input_2d, input_1d], outputs={\"result\": dense2})"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "220bf72505d93a86"
  },
  {
   "cell_type": "code",
   "outputs": [],
   "source": [
    "model.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy'])\n",
    "model.summary()"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "ff3aee4ffb333cc8"
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
